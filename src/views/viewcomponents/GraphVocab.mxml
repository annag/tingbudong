<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" 
		   xmlns:axiis="http://www.axiis.org/2009"
		   xmlns:degrafa="http://www.degrafa.com/2007"
		   xmlns:extras="org.axiis.extras.layouts.*">
   <mx:Script>
   <![CDATA[
	   import org.axiis.data.DataSet;
	   import model.Layout;
	   private var ds:DataSet = new DataSet();
	   public var dataXML:String; 
	   [Bindable]
	   private var vScaleMaxValue:Number = 5;
	   
	   public function start():void
	   {
		   if(dataXML != ""){
			   
		   ds.processXmlString(dataXML);
		   ds.aggregateData(ds.data.object, "category", ["count"]);
		   
		   
		   //testme = 70;
		   vScale.maxValue = ds.data.object.aggregates['category_count_max'];
		   vScaleMaxValue = 5555;//vScale.maxValue;
		   
		   dc.invalidateDisplayList();
		   dataProvider=ds.data.object.category;
		   dc.invalidateDisplayList();
		   testtest.invalidateDataProvider()
			   testtest.invalidate();
			   vScale.invalidate();
		   }else
		   {
			   dc.visible = false;
			   noinput_txt.visible = true;
		   }
	   }
	
	   override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
	   {
		   super.updateDisplayList(unscaledWidth, unscaledHeight) ;
		  // vScaleMaxValue = 
		   testtest.majorTickSpacing = vScale.maxValue*10;
		   testtest.invalidateDataProvider();
		   testtest.invalidate();
		   testtest.render();
		   if(hLayout.currentReference){
			 
		   }
	   }
   ]]>
   </mx:Script>
	<mx:String id="countryData" source="data/vocab2.xml"/>  
   <mx:Object id="dataProvider"/>
   <axiis:LinearScale id="vScale" minValue="0"  dataProvider="{dataProvider}" 
				  minLayout="0" maxLayout="{dc.height}"/>
   <axiis:DataCanvas id="dc" width="695" height="290" verticalCenter="0" left="35" >
   <axiis:backgroundGeometries>
	   <axiis:VAxis id="testtest"
		   verticalScale="{vScale}"
		   width="{dc.width}"
		   height="{dc.height}"
		   tickGap="5"
		   tickStroke="{axisStroke}"
		   fontFamily="Myriad Pro"
		   fontColor="0x999999"
		   fontSize="14"
		   gridFill="{gridFill}"
		   />
   </axiis:backgroundGeometries>
   <axiis:layouts>
	   <axiis:BaseLayout id="hLayout"
						 x="20"
						 width="{dc.width-15}" 
						 height="{dc.height}"
						 dataProvider="{dataProvider}"
						 dataField="count" 
						 labelField="name">
		   <axiis:referenceRepeater>
			   <axiis:GeometryRepeater>
				   <axiis:geometry>
					   <degrafa:RegularRectangle
						   id="referenceRectangle"
						   x="0"
						   y="0"
						   width="{(hLayout.width / hLayout.itemCount) - (hLayout.width/hLayout.itemCount)*.1}"
						   height="{hLayout.height}"/>
				   </axiis:geometry>
				   <axiis:modifiers>
					   <axiis:PropertyModifier property="x" 
											   modifier="{hLayout.width/hLayout.itemCount}"/>
				   </axiis:modifiers>
			   </axiis:GeometryRepeater>
		   </axiis:referenceRepeater>
		   <axiis:drawingGeometries>
			   <degrafa:RegularRectangle 
				   id="drawingRectangle" 
				   width="{hLayout.currentReference.width}"
				   height="{vScale.valueToLayout(hLayout.currentValue)}" 
				   x="{hLayout.currentReference.x}"
				   y="{hLayout.currentReference.height-vScale.valueToLayout(hLayout.currentValue)}" 
				   fill="{fill}"
				   stroke="{stroke}"/>
			   <degrafa:RasterText 
				   text="{hLayout.currentLabel}"
				   align="center"
				   fontFamily="Arial"
				   x="{hLayout.currentReference.x}"
				   width="120" 
				   textColor="{ap.currentColor}"
				   y="{hLayout.height+5}">
			   </degrafa:RasterText>
			   <degrafa:RasterText 
				   text="{hLayout.currentValue}"
				   fontFamily="Arial"
				   align="center"
				   x="{hLayout.currentReference.x}"
				   width="80"
				   y="{hLayout.currentReference.height-vScale.valueToLayout(hLayout.currentValue)-20}">
			   </degrafa:RasterText>
		   </axiis:drawingGeometries>
	   </axiis:BaseLayout>
   </axiis:layouts>
   </axiis:DataCanvas>
   <axiis:LayoutAutoPalette id="ap" autoInterpolate="false"
					 colors="{Layout.getColors()}"
						layout="{hLayout}"/>
   
   <degrafa:LinearGradientFill id="fill" angle="90">
   <degrafa:GradientStop color="{ap.currentColor}"/>
   <degrafa:GradientStop color="{ap.currentColor | 0x444444}" alpha=".7"/>
   </degrafa:LinearGradientFill>
   
   <degrafa:LinearGradientStroke id="stroke" angle="45">
   <degrafa:GradientStop color="{ap.currentColor | 0x444444}"/>
   <degrafa:GradientStop color="{ap.currentColor}"/>
   </degrafa:LinearGradientStroke>
	<degrafa:SolidStroke id="axisStroke" color="0x6666666"  pixelHinting="true"/>
	<degrafa:SolidFill id="gridFill" color="#000000" alpha="0.1" />
	<mx:Text id="noinput_txt" x="300" y="300" width="250" fontSize="12" color="#ffffff" selectable="false" text="Nothing to display." visible="false"/>
</mx:Canvas>
